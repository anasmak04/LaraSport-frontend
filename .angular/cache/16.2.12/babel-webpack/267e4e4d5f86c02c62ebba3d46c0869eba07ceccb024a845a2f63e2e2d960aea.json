{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Authservice/auth-service.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(authservice, fb, router) {\n    this.authservice = authservice;\n    this.fb = fb;\n    this.router = router;\n    this.loginForm = FormGroup;\n  }\n  ngOnInit() {\n    this.initializeForm();\n  }\n  initializeForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  login() {\n    if (this.loginForm.valid) {\n      this.authservice.login(this.loginForm.value).subscribe({\n        next: response => {\n          console.log('login successful', response);\n          this.router.navigate([\"/home\"]);\n        },\n        error: error => {\n          console.error('login failed', error);\n        }\n      });\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthServiceService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[1, \"bg-gray-100\", \"flex\", \"items-center\", \"justify-center\", \"h-screen\"], [1, \"bg-white\", \"p-8\", \"rounded-lg\", \"shadow-lg\", \"w-full\", \"max-w-md\"], [1, \"mb-6\", \"text-2xl\", \"text-center\", \"font-semibold\", \"text-gray-800\"], [1, \"space-y-4\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"mt-1\", \"block\", \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"py-2\", \"px-3\", \"focus:outline-none\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"for\", \"password\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"mt-1\", \"block\", \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"py-2\", \"px-3\", \"focus:outline-none\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"type\", \"submit\", 1, \"w-full\", \"flex\", \"justify-center\", \"py-2\", \"px-4\", \"border\", \"border-transparent\", \"rounded-md\", \"shadow-sm\", \"text-sm\", \"font-medium\", \"text-white\", \"bg-indigo-600\", \"hover:bg-indigo-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-indigo-500\", \"disabled:opacity-50\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Login Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵtext(14, \"Login\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","Validators","LoginComponent","constructor","authservice","fb","router","loginForm","ngOnInit","initializeForm","group","email","required","password","minLength","login","valid","value","subscribe","next","response","console","log","navigate","error","_","i0","ɵɵdirectiveInject","i1","AuthServiceService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Youcode\\Desktop\\laraSport-front\\src\\app\\login\\login.component.ts","C:\\Users\\Youcode\\Desktop\\laraSport-front\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthServiceService } from '../Authservice/auth-service.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: any = FormGroup;\n\n  constructor(private authservice : AuthServiceService,\n    private fb : FormBuilder, private router : Router){}\n\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n\n  initializeForm(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n\n\n\n\n  login(){\n\n    if(this.loginForm.valid){\n      this.authservice.login(this.loginForm.value).subscribe({\n        next: (response) => {\n          console.log('login successful', response);\n          this.router.navigate([\"/home\"]);\n        },\n        error: (error) => {\n          console.error('login failed', error)\n        }\n      })\n    }\n\n  }\n\n}\n","  \r\n\r\n  <div class=\"bg-gray-100 flex items-center justify-center h-screen\">\r\n    <div class=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h2 class=\"mb-6 text-2xl text-center font-semibold text-gray-800\">Login Form</h2>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"space-y-4\">\r\n            <div>\r\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email:</label>\r\n                <input type=\"email\" id=\"email\" formControlName=\"email\" required class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\">\r\n            </div>\r\n            <div>\r\n                <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Password:</label>\r\n                <input type=\"password\" id=\"password\" formControlName=\"password\" required class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\">\r\n            </div>\r\n            <button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\">Login</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}