{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nexport let TagsComponent = class TagsComponent {\n  constructor(tagservice, fb) {\n    this.tagservice = tagservice;\n    this.fb = fb;\n    this.message = \"\";\n    this.tags = [];\n    this.TagsForm = this.fb.group({\n      name: [\"\", Validators.required]\n    });\n  }\n  ngOnInit() {}\n  save() {\n    if (this.TagsForm.valid) {\n      this.tagservice.save(this.TagsForm.value).subscribe({\n        next: () => {\n          this.message = \"tags added successfully\";\n          this.TagsForm.reset();\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n    }\n  }\n  delete(id) {\n    this.tagservice.delete(id).subscribe({\n      next: () => console.log(\"tags deleted\"),\n      error: err => console.log(err)\n    });\n  }\n  findAll() {\n    this.tagservice.findAll().subscribe({\n      next: data => this.tags = data,\n      error: err => console.error(err)\n    });\n  }\n  update(id) {\n    this.tagservice.update(id, this.TagsForm.value).subscribe({\n      next: category => {\n        console.log(\"category updated\", category);\n      },\n      error: err => console.log(err)\n    });\n  }\n};\nTagsComponent = __decorate([Component({\n  selector: \"app-tags\",\n  templateUrl: \"./tags.component.html\",\n  styleUrls: [\"./tags.component.css\"]\n})], TagsComponent);","map":{"version":3,"names":["Component","Validators","TagsComponent","constructor","tagservice","fb","message","tags","TagsForm","group","name","required","ngOnInit","save","valid","value","subscribe","next","reset","error","err","console","log","delete","id","findAll","data","update","category","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Youcode\\Desktop\\laraSport-front\\src\\app\\tags\\tags.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { TagsServiceService } from \"../services/tags/tags-service.service\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { TagsResponse } from \"../shared/model/tags-response\";\n\n@Component({\n  selector: \"app-tags\",\n  templateUrl: \"./tags.component.html\",\n  styleUrls: [\"./tags.component.css\"],\n})\nexport class TagsComponent implements OnInit {\n  TagsForm: FormGroup;\n\n  message: String = \"\";\n\n  constructor(private tagservice: TagsServiceService, private fb: FormBuilder) {\n    this.TagsForm = this.fb.group({\n      name: [\"\", Validators.required],\n    });\n  }\n\n  tags: any[] = [];\n  ngOnInit(): void {}\n\n  save() {\n    if (this.TagsForm.valid) {\n      this.tagservice.save(this.TagsForm.value).subscribe({\n        next: () => {\n          this.message = \"tags added successfully\";\n          this.TagsForm.reset();\n        },\n\n        error: (err) => {\n          console.log(err);\n        },\n      });\n    }\n  }\n\n  delete(id: number): void {\n    this.tagservice.delete(id).subscribe({\n      next: () => console.log(\"tags deleted\"),\n      error: (err) => console.log(err),\n    });\n  }\n\n  findAll() {\n    this.tagservice.findAll().subscribe({\n      next: (data) => (this.tags = data),\n      error: (err) => console.error(err),\n    });\n  }\n\n  update(id: number) {\n    this.tagservice.update(id, this.TagsForm.value).subscribe({\n      next: (category) => {\n        console.log(\"category updated\", category);\n      },\n\n      error: (err) => console.log(err),\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YAAoBC,UAA8B,EAAUC,EAAe;IAAvD,KAAAD,UAAU,GAAVA,UAAU;IAA8B,KAAAC,EAAE,GAAFA,EAAE;IAF9D,KAAAC,OAAO,GAAW,EAAE;IAQpB,KAAAC,IAAI,GAAU,EAAE;IALd,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,IAAI,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ;KAC/B,CAAC;EACJ;EAGAC,QAAQA,CAAA,GAAU;EAElBC,IAAIA,CAAA;IACF,IAAI,IAAI,CAACL,QAAQ,CAACM,KAAK,EAAE;MACvB,IAAI,CAACV,UAAU,CAACS,IAAI,CAAC,IAAI,CAACL,QAAQ,CAACO,KAAK,CAAC,CAACC,SAAS,CAAC;QAClDC,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACX,OAAO,GAAG,yBAAyB;UACxC,IAAI,CAACE,QAAQ,CAACU,KAAK,EAAE;QACvB,CAAC;QAEDC,KAAK,EAAGC,GAAG,IAAI;UACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAClB;OACD,CAAC;;EAEN;EAEAG,MAAMA,CAACC,EAAU;IACf,IAAI,CAACpB,UAAU,CAACmB,MAAM,CAACC,EAAE,CAAC,CAACR,SAAS,CAAC;MACnCC,IAAI,EAAEA,CAAA,KAAMI,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MACvCH,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG;KAChC,CAAC;EACJ;EAEAK,OAAOA,CAAA;IACL,IAAI,CAACrB,UAAU,CAACqB,OAAO,EAAE,CAACT,SAAS,CAAC;MAClCC,IAAI,EAAGS,IAAI,IAAM,IAAI,CAACnB,IAAI,GAAGmB,IAAK;MAClCP,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAACC,GAAG;KAClC,CAAC;EACJ;EAEAO,MAAMA,CAACH,EAAU;IACf,IAAI,CAACpB,UAAU,CAACuB,MAAM,CAACH,EAAE,EAAE,IAAI,CAAChB,QAAQ,CAACO,KAAK,CAAC,CAACC,SAAS,CAAC;MACxDC,IAAI,EAAGW,QAAQ,IAAI;QACjBP,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEM,QAAQ,CAAC;MAC3C,CAAC;MAEDT,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG;KAChC,CAAC;EACJ;CACD;AApDYlB,aAAa,GAAA2B,UAAA,EALzB7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACW9B,aAAa,CAoDzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}