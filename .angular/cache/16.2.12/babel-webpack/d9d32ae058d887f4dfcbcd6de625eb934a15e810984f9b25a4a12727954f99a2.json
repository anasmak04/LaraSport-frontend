{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../shared/shared.service\";\nimport * as i3 from \"../Authservice/auth-service.service\";\nimport * as i4 from \"@angular/router\";\nexport class RegisterComponent {\n  constructor(fb, data, authService, router) {\n    this.fb = fb;\n    this.data = data;\n    this.authService = authService;\n    this.router = router;\n    this.registerForm = FormGroup;\n    this.cities = [];\n  }\n  ngOnInit() {\n    this.getCities();\n    this.initializeForm();\n  }\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      password_confirmation: ['', [Validators.required]]\n    });\n  }\n  register() {\n    if (this.registerForm.valid) {\n      this.authService.register(this.registerForm.value).subscribe({\n        next: response => {\n          console.log('Registration successful', response);\n          this.authService.storeToken(response.access_token);\n          console.log(response);\n          this.router.navigate(['/login']);\n        },\n        error: error => {\n          console.error('Registration failed', error);\n        }\n      });\n    }\n  }\n  getCities() {\n    this.data.getData().subscribe(data => {\n      this.cities = data;\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SharedService), i0.ɵɵdirectiveInject(i3.AuthServiceService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 31,\n    vars: 2,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"ie=edge\"], [\"href\", \"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\", \"rel\", \"stylesheet\"], [1, \"bg-gray-100\", \"flex\", \"items-center\", \"justify-center\", \"h-screen\"], [1, \"bg-white\", \"p-8\", \"rounded-lg\", \"shadow-lg\", \"w-full\", \"max-w-md\"], [1, \"mb-6\", \"text-2xl\", \"text-center\", \"font-semibold\", \"text-gray-800\"], [1, \"space-y-4\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"mt-1\", \"block\", \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"py-2\", \"px-3\", \"focus:outline-none\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"for\", \"email\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 1, \"mt-1\", \"block\", \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"py-2\", \"px-3\", \"focus:outline-none\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"for\", \"password\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 1, \"mt-1\", \"block\", \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"py-2\", \"px-3\", \"focus:outline-none\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"for\", \"password_confirmation\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"type\", \"password\", \"id\", \"password_confirmation\", \"formControlName\", \"password_confirmation\", \"required\", \"\", 1, \"mt-1\", \"block\", \"w-full\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"py-2\", \"px-3\", \"focus:outline-none\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"type\", \"submit\", 1, \"w-full\", \"flex\", \"justify-center\", \"py-2\", \"px-4\", \"border\", \"border-transparent\", \"rounded-md\", \"shadow-sm\", \"text-sm\", \"font-medium\", \"text-white\", \"bg-indigo-600\", \"hover:bg-indigo-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-indigo-500\", \"disabled:opacity-50\", 3, \"disabled\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n        i0.ɵɵelementStart(5, \"title\");\n        i0.ɵɵtext(6, \"Registration Page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"link\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"body\", 5)(9, \"div\", 6)(10, \"h2\", 7);\n        i0.ɵɵtext(11, \"Inscription via formulaire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"form\", 8);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\")(18, \"label\", 11);\n        i0.ɵɵtext(19, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\")(22, \"label\", 13);\n        i0.ɵɵtext(23, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\")(26, \"label\", 15);\n        i0.ɵɵtext(27, \"Confirm Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 17);\n        i0.ɵɵtext(30, \"Register\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","Validators","RegisterComponent","constructor","fb","data","authService","router","registerForm","cities","ngOnInit","getCities","initializeForm","group","name","required","email","password","minLength","password_confirmation","register","valid","value","subscribe","next","response","console","log","storeToken","access_token","navigate","error","getData","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","SharedService","i3","AuthServiceService","i4","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_12_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Youcode\\Desktop\\laraSport-front\\src\\app\\register\\register.component.ts","C:\\Users\\Youcode\\Desktop\\laraSport-front\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SharedService } from \"../shared/shared.service\";\nimport { AuthServiceService } from '../Authservice/auth-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: any = FormGroup;\n  cities: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private data: SharedService,\n    private authService: AuthServiceService,\n    private router : Router,\n    \n  ) {}\n\n  ngOnInit() {\n    this.getCities();\n    this.initializeForm();\n  }\n\n  initializeForm(): void {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      password_confirmation: ['', [Validators.required]]\n    });\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.authService.register(this.registerForm.value).subscribe({\n        next: (response) => {\n          console.log('Registration successful', response);\n          this.authService.storeToken(response.access_token);\n          console.log(response);\n          this.router.navigate(['/login']);\n\n        },\n        error: (error) => {\n          console.error('Registration failed', error)\n        }\n        \n      });\n\n    }\n  }\n\n  getCities() {\n    this.data.getData().subscribe((data) => {\n      this.cities = data;\n    });\n  }\n}\n","<!doctype html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Registration Page</title>\n    <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\n</head>\n<body class=\"bg-gray-100 flex items-center justify-center h-screen\">\n<div class=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\n    <h2 class=\"mb-6 text-2xl text-center font-semibold text-gray-800\">Inscription via formulaire</h2>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" class=\"space-y-4\">\n      <div>\n        <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">Name:</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\" required class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\">\n      </div>\n      <div>\n        <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email:</label>\n        <input type=\"email\" id=\"email\" formControlName=\"email\" required class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\">\n      </div>\n      <div>\n        <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Password:</label>\n        <input type=\"password\" id=\"password\" formControlName=\"password\" required class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\">\n      </div>\n      <div>\n        <label for=\"password_confirmation\" class=\"block text-sm font-medium text-gray-700\">Confirm Password:</label>\n        <input type=\"password\" id=\"password_confirmation\" formControlName=\"password_confirmation\" required class=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\">\n      </div>\n      <button type=\"submit\" [disabled]=\"!registerForm.valid\" class=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\">Register</button>\n    </form>\n</div>\n</body>\n</html>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}