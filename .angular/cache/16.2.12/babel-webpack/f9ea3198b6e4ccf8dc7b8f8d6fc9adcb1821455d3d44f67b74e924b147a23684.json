{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TagsServiceService {\n  constructor(http) {\n    this.http = http;\n    this.UrlApi = \"http://127.0.0.1:8000/api/tags\";\n  }\n  save(tags) {\n    return this.http.post(this.UrlApi, tags);\n  }\n  delete(id) {\n    return this.http.delete(`${this.UrlApi}/${id}`);\n  }\n  findById(id) {\n    return this.http.get(`${this.UrlApi}/${id}`);\n  }\n  findAll() {\n    return this.http.get(this.UrlApi);\n  }\n  update(id, tags) {\n    return this.http.put(`${this.UrlApi}/${id}`, tags);\n  }\n  static #_ = this.ɵfac = function TagsServiceService_Factory(t) {\n    return new (t || TagsServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TagsServiceService,\n    factory: TagsServiceService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["TagsServiceService","constructor","http","UrlApi","save","tags","post","delete","id","findById","get","findAll","update","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Youcode\\Desktop\\laraSport-front\\src\\app\\services\\tags\\tags-service.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { categoryResponse } from \"src/app/shared/model/category-response\";\nimport { Tags } from \"src/app/shared/model/Tags\";\nimport { TagsResponse } from \"src/app/shared/model/TagsResponse\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TagsServiceService {\n  constructor(private http: HttpClient) {}\n  UrlApi: string = \"http://127.0.0.1:8000/api/tags\";\n\n  save(tags: Tags): Observable<Tags> {\n    return this.http.post<Tags>(this.UrlApi, tags);\n  }\n\n  delete(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.UrlApi}/${id}`);\n  }\n\n  findById(id: number): Observable<Tags> {\n    return this.http.get<Tags>(`${this.UrlApi}/${id}`);\n  }\n\n  findAll(): Observable<TagsResponse> {\n    return this.http.get<Tags[]>(this.UrlApi);\n  }\n  \n\n  update(id: number, tags: Tags): Observable<Tags> {\n    return this.http.put<Tags>(`${this.UrlApi}/${id}`, tags);\n  }\n}\n"],"mappings":";;AAUA,OAAM,MAAOA,kBAAkB;EAC7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,MAAM,GAAW,gCAAgC;EADV;EAGvCC,IAAIA,CAACC,IAAU;IACb,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,MAAM,EAAEE,IAAI,CAAC;EAChD;EAEAE,MAAMA,CAACC,EAAU;IACf,OAAO,IAAI,CAACN,IAAI,CAACK,MAAM,CAAO,GAAG,IAAI,CAACJ,MAAM,IAAIK,EAAE,EAAE,CAAC;EACvD;EAEAC,QAAQA,CAACD,EAAU;IACjB,OAAO,IAAI,CAACN,IAAI,CAACQ,GAAG,CAAO,GAAG,IAAI,CAACP,MAAM,IAAIK,EAAE,EAAE,CAAC;EACpD;EAEAG,OAAOA,CAAA;IACL,OAAO,IAAI,CAACT,IAAI,CAACQ,GAAG,CAAS,IAAI,CAACP,MAAM,CAAC;EAC3C;EAGAS,MAAMA,CAACJ,EAAU,EAAEH,IAAU;IAC3B,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEH,IAAI,CAAC;EAC1D;EAAC,QAAAS,CAAA,G;qBAvBUd,kBAAkB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBnB,kBAAkB;IAAAoB,OAAA,EAAlBpB,kBAAkB,CAAAqB,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}